---
import DynamicIcon from './icons/DynamicIcon.astro'

const tools = Array.from({ length: 20 })

tools[0] = {
  title: 'Github Action',
  icon: 'ghactions',
  color: 'purple',
  pattern: 5,
}

tools[5] = {
  title: 'AWS',
  icon: 'aws',
  color: 'orange',
  pattern: 1,
}

tools[7] = {
  title: 'React',
  icon: 'react',
  color: 'blue',
  pattern: 2,
}

tools[8] = {
  title: 'Docker',
  icon: 'docker',
  color: 'sea',
  pattern: 4,
}

tools[10] = {
  title: 'Kotlin',
  icon: 'kotlin',
  color: 'violet',
  pattern: 5,
}
tools[14] = {
  title: 'Redux',
  icon: 'redux',
  color: 'blue',
  pattern: 2,
}
tools[15] = {
  title: 'Golang',
  icon: 'golang',
  color: 'green',
  pattern: 3,
}
tools[17] = {
  title: 'Rust',
  icon: 'rust',
  color: 'orange',
  pattern: 1,
}
---

<section id="tools">
  <article>
    <h2>Toolbox</h2>
    <p>
      lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed euismod nunc
      euismod, aliquam nisl nec, ultricies nisl. Sed euismod nunc euismod,
      aliquam nisl nec, ultricies nisl. Sed euismod nunc euismod, aliquam nisl
      nec, ultricies nisl. Sed euismod nunc euismod, aliquam nisl nec, ultricies
      nisl. Sed euismod nunc euismod, aliquam nisl nec, ultricies nisl. Sed
      euismod nunc euismod, aliquam nisl nec, ultricies nisl.
    </p>
    <button>Dave into my tools</button>
  </article>
  <article class="table">
    {
      tools.map((tool: any) =>
        tool ? (
          <div class={`tool gradient gradient--${tool.color}`}>
            <h3>{tool.title}</h3>
            <DynamicIcon name={tool.icon} />
          </div>
        ) : (
          <div />
        )
      )
    }
  </article>
</section>

<style lang="scss">
  section {
    width: 100%;
    margin: 0 auto;
    max-width: var(--size-lg);
    display: flex;
  }
  h2 {
    align-self: flex-start;
    font-size: var(--fluid-font-size-9);
    color: var(--gray-12);
    text-transform: uppercase;
    color: var(--gray-12);
    font-weight: var(--font-weight-9);
    margin-block-end: var(--size-5);
    padding-inline: var(--size-4);
  }
  article {
    display: flex;
    flex-direction: column;
  }

  .table {
    font-size: clamp(1rem, 1.5vw, 1.5rem);
    overflow: visible;
    align-self: flex-start;
    display: grid;
    margin-block-start: var(--size-10);
    margin-inline-start: var(--size-8);
    margin-inline-end: var(--size-5);
    grid-template-rows: repeat(5, 5em);
    grid-template-columns: repeat(4, 5em);
    grid-template-areas:
      'item-1 item-2 item-3 item-4'
      'item-5 item-6 item-7 item-8'
      'item-9 item-10 item-11 item-12'
      'item-13 item-14 item-15 item-16'
      'item-17 item-18 item-19 item-20';
  }

  h3 {
    position: relative;
    z-index: var(--layer-1);
    color: inherit;
    font-size: 0.7em;
    font-weight: var(--font-weight-6);
  }

  :global(.tool svg) {
    position: relative;
    z-index: var(--layer-4);
  }

  .table .tool {
    color: var(--gray-0);
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    padding: 0.3em;
    padding-bottom: 0.4em;
  }

  p {
    color: var(--gray-12);
    padding-inline: var(--size-4);
  }

  button {
    align-self: flex-start;
    margin-inline: var(--size-4);
    padding: var(--size-2) var(--size-8);
    margin-block-start: var(--size-5);
    color: var(--gray-0);
    background-image: linear-gradient(45deg, #5680e9 0%, #8860d0 100%);
  }

  @for $i from 1 through 20 {
    .table > .tool:nth-child(#{$i}) {
      grid-area: item-#{$i};
    }
  }

  @media screen and (max-width: 768px) {
    section {
      display: flex;
      flex-direction: column;
      align-items: center;
    }
    .table {
      margin-inline-start: var(--size-0) !important;
      margin-inline-end: var(--size-0) !important;
      margin-block-start: var(--size-9);
      align-self: center;
      font-size: clamp(1rem, 1.5vw, 5rem);
    }
  }

  .gradient {
    position: relative;
    &::before {
      content: '';
      position: absolute;
      inset: 0px 0px 0px 0px;
      background-color: var(--gray-10);
      z-index: 0;
      opacity: 1;
      transition: opacity 0.3s ease-in-out;
    }

    &::after {
      content: '';
      position: absolute;
      inset: 0px 0px 0px 0px;
      z-index: 1;
      opacity: 0;
      transition: opacity 0.3s ease-in-out;
    }

    &--orange {
      background: linear-gradient(45deg, #d62828 0%, #f77f00 87.07%);
      &::after {
        background-image: url('./assets/pattern-1.png');
      }
    }

    &--blue {
      background: linear-gradient(45deg, #0078ff 0%, #b721ff 96.98%);
      &::after {
        background-image: url('./assets/pattern-2.png');
      }
    }

    &--green {
      background: linear-gradient(216.07deg, #00acd8 11.44%, #3ae966 100%);
      &::after {
        background-image: url('./assets/pattern-3.png');
      }
    }

    &--sea {
      background: linear-gradient(50.03deg, #0157ff 0%, #0db7ed 66.68%);
      &::after {
        background-image: url('./assets/pattern-4.png');
      }
    }

    &--purple {
      background: linear-gradient(45deg, #2a03d0 0%, #fe05c8 100%);
      &::after {
        background-image: url('./assets/pattern-5.png');
      }
    }

    &--violet {
      background: linear-gradient(45deg, #e44857, #c711e1, #7f52ff);
      &::after {
        background-image: url('./assets/pattern-5.png');
      }
    }

    &:hover {
      &::before {
        opacity: 0;
      }

      &::after {
        opacity: 1;
      }
    }
  }

  :global(.tool:hover path) {
    fill: var(--gray-0);
    color: var(--gray-0);
    transition: color 0.3s ease-in-out;
  }
</style>
