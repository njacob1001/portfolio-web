---
const skills = [
  {
    id: 'front-end',
    label: 'Front end',
    text: "It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English",
  },
  {
    id: 'backend-end',
    label: 'Back end',
    text: ".It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English",
  },
  {
    id: 'devops',
    label: 'DevOps',
    text: "saIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English",
  },
  {
    id: 'machine-learning',
    label: 'Machine Learning',
    text: "21It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English",
  },
  {
    id: 'teamwork',
    label: 'Teamwork',
    text: "0000000It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English",
  },
]
---

<section>
  <div class="constrain-with">
    <h2>Skills</h2>
    <div class="surface">
      {
        skills.map(({ label, text, id }, index) => (
          <details id={id}>
            <summary>
              <div class="relative w-1/5 p-4 before:contents before:absolute before:top-0 before:left-0 before:right-0 before:bottom-0 before:bg-black">
                <span class="text-white relative z-10 font-bold">{label}</span>
              </div>
            </summary>
            <div class="content">
              <p class="max-w-[500px]">{text}</p>
            </div>
          </details>
        ))
      }
    </div>
  </div>
</section>

<script>
  const firstItem = document.getElementsByTagName('details').item(0)
  firstItem?.setAttribute('open', 'true')

  const clickHandler =
    (clicked: HTMLDetailsElement, nodes: NodeListOf<HTMLDetailsElement>) =>
    (e: MouseEvent) => {
      e.preventDefault()
      nodes.forEach((item) => {
        if (item.id !== clicked.id) {
          item.removeAttribute('open')
        } else {
          item.setAttribute('open', 'true')
        }
      })
    }

  document.querySelectorAll('details').forEach((currentItem, _, arr) => {
    currentItem.addEventListener('click', clickHandler(currentItem, arr))
  })
</script>

<style>
  section {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: 100vh;
    background-color: #cbd5e1;
    background-image: linear-gradient(to bottom right, #0284c7, #16a34a);
  }

  .constrain-with {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    width: 100%;
    max-width: var(--size-lg);
    margin-block-start: var(--size-8);
  }

  h2 {
    align-self: flex-start;
    font-size: var(--font-size-9);
    font-weight: var(--font-weight-9);
    text-transform: uppercase;
    margin: var(--size-8) var(--size-7);
    color: var(--gray-0);
  }

  .surface {
    /* relative bg-white flex flex-col mx-8 self-stretch md:gap-4 */
    position: relative;
    background-color: var(--gray-0);
    display: flex;
    flex-direction: column;
    margin-inline: var(--size-7);
    align-self: stretch;
    gap: var(--size-3);
    flex-wrap: wrap;
    justify-content: space-between;
  }

  details {
    width: 30%;
    margin-bottom: 20px;
  }

  .content {
    position: absolute;
    inset: 0 0 0 auto;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 50%;
  }
</style>
